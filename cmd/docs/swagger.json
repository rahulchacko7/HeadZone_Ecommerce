{
    "swagger": "2.0",
    "info": {
        "description": "HeadZone is an E-commerce platform to purchase and sell Headphones",
        "title": "Go + Gin E-Commerce API",
        "contact": {
            "name": "API Support"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/user/login": {
            "post": {
                "description": "Logs in a user with provided credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "User login details in JSON format",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details logged in successfully",
                        "schema": {
                            "$ref": "#/definitions/models.UserDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid request or constraints not satisfied",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models.UserDetails"
                        }
                    }
                }
            }
        },
        "/user/profile/addresses/{id}": {
            "get": {
                "description": "Get addresses associated with a user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Retrieve addresses for a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Addresses retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Address"
                            }
                        }
                    },
                    "400": {
                        "description": "Could not retrieve records or invalid request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/user/profile{id}": {
            "get": {
                "description": "Retrieve user details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user details",
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.UserDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Failed to retrieve user details",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User details in JSON format",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserDetails"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User signed up successfully",
                        "schema": {
                            "$ref": "#/definitions/models.UserDetails"
                        }
                    },
                    "400": {
                        "description": "Invalid request or constraints not satisfied",
                        "schema": {
                            "$ref": "#/definitions/models.TokenUsers"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.TokenUsers"
                        }
                    }
                }
            }
        },
        "/user/{id}/address": {
            "post": {
                "description": "Adds a new address for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Add a new address",
                "parameters": [
                    {
                        "description": "Address details in JSON format",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request or address addition failed",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AddAddress": {
            "type": "object",
            "required": [
                "city",
                "house_name",
                "name",
                "phone",
                "pin",
                "state",
                "street"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "house_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "models.Address": {
            "type": "object",
            "required": [
                "city",
                "house_name",
                "name",
                "pin",
                "state",
                "street"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "house_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.TokenUsers": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "users": {
                    "$ref": "#/definitions/models.UserDetailsResponse"
                }
            }
        },
        "models.UserDetails": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "confirmpassword": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.UserDetailsResponse": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.UserLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {},
                "message": {
                    "description": "StatusCode int         `json:\"status_code\"`",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerTokenAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}